"use strict";(()=>{var e={};e.id=879,e.ids=[879],e.modules={38013:e=>{e.exports=require("mongodb")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},10647:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>C,originalPathname:()=>$,patchFetch:()=>O,requestAsyncStorage:()=>I,routeModule:()=>E,serverHooks:()=>x,staticGenerationAsyncStorage:()=>k,staticGenerationBailout:()=>T});var o={};r.r(o),r.d(o,{POST:()=>y});var n=r(95419),i=r(69108),a=r(99678),s=r(78070),c=r(6113);let l={randomUUID:c.randomUUID},d=new Uint8Array(256),u=d.length,p=[];for(let e=0;e<256;++e)p.push((e+256).toString(16).slice(1));let h=function(e,t,r){if(l.randomUUID&&!t&&!e)return l.randomUUID();let o=(e=e||{}).random??e.rng?.()??(u>d.length-16&&((0,c.randomFillSync)(d),u=0),d.slice(u,u+=16));if(o.length<16)throw Error("Random bytes length must be >= 16");if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t){if((r=r||0)<0||r+16>t.length)throw RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[r+e]=o[e];return t}return function(e,t=0){return(p[e[t+0]]+p[e[t+1]]+p[e[t+2]]+p[e[t+3]]+"-"+p[e[t+4]]+p[e[t+5]]+"-"+p[e[t+6]]+p[e[t+7]]+"-"+p[e[t+8]]+p[e[t+9]]+"-"+p[e[t+10]]+p[e[t+11]]+p[e[t+12]]+p[e[t+13]]+p[e[t+14]]+p[e[t+15]]).toLowerCase()}(o)};var g=r(28216),f=r(45894),w=r(70973),v=r(48960);async function m(e,t,r=5){let o=e.length;for(let n=0;n<e.length;n+=r){let i=e.slice(n,n+r);await (0,g.ng)(t,{progress:`Processing chunks ${n+1}-${Math.min(n+r,o)} of ${o}...`}),await Promise.all(i.map(async e=>{try{let r=await (0,v.C)(e.textContent);await (0,g.fV)(t,e.chunkId,r)}catch(t){console.error(`Error processing chunk ${e.chunkId}:`,t)}}))}}async function b(e,t,r){try{await (0,g.ng)(e,{status:"processing",progress:"Checking video availability..."});let o=(0,f.Tm)(t);if(!o)throw Error("Invalid YouTube URL");try{let t=await (0,f.kS)(o);await (0,g.ng)(e,{progress:`Processing video: ${t.title||"Untitled"}...`})}catch(t){console.error("Error fetching video details:",t),await (0,g.ng)(e,{status:"failed",transcriptStatus:"error",progress:"Could not verify video details. Please check if the video is available and public."});return}let n=null;try{n=await (0,f.V6)(t)}catch(e){console.log("No transcript available, will use Gemini directly:",e)}if(!n||0===n.length){await (0,g.ng)(e,{status:"completed",transcriptStatus:"not_found",progress:"Video processed. You can now chat about the video using Gemini."});return}await (0,g.ng)(e,{progress:"Processing transcript..."});let i=[],a={text:"",start:0,duration:0,segments:[]};for(let t of n){let o=a.text.length+t.text.length>1e3;a.text&&o?(i.push({jobId:e,userId:r,chunkId:`${e}-${i.length}`,textContent:a.text.trim(),startTimestamp:a.start.toString(),endTimestamp:(a.start+a.duration).toString(),segmentCount:a.segments.length,embedding:[],metadata:{processingVersion:1}}),a={text:t.text,start:t.start,duration:t.duration,segments:[t]}):(a.text?a.text+=" "+t.text:a.text=t.text,a.duration+=t.duration,a.segments.push(t))}if(a.text&&i.push({jobId:e,userId:r,chunkId:`${e}-${i.length}`,textContent:a.text.trim(),startTimestamp:a.start.toString(),endTimestamp:(a.start+a.duration).toString(),segmentCount:a.segments.length,embedding:[],metadata:{processingVersion:1}}),0===i.length)throw Error("No valid chunks were created from the transcript");for(let e=1;e<i.length;e++){let t=parseFloat(i[e-1].endTimestamp),r=parseFloat(i[e].startTimestamp),o=r-t;o>1&&(console.warn(`Gap detected between chunks ${e-1} and ${e}: ${o.toFixed(2)} seconds`),console.warn(`Previous chunk end: ${t}, Current chunk start: ${r}`),console.warn(`Previous chunk text: "${i[e-1].textContent.slice(-50)}..."`),console.warn(`Current chunk text: "${i[e].textContent.slice(0,50)}..."`))}if(i.length>0){await (0,g.ng)(e,{progress:"Storing transcript chunks..."});try{await (0,g.O5)(i),await m(i,e),await (0,g.ng)(e,{status:"completed",transcriptStatus:"found",progress:"Processing complete"})}catch(t){throw console.error("Error storing transcript chunks:",t),await (0,g.ng)(e,{status:"failed",transcriptStatus:"error",progress:"Failed to store transcript chunks"}),t}}else await (0,g.ng)(e,{status:"completed",transcriptStatus:"not_found",progress:"Video processed. You can now chat about the video using Gemini."})}catch(r){console.error("Error processing video:",r);let t="Error during processing";r instanceof Error&&(t=r.message.includes("private")?"This video is private. Please try a public video.":r.message.includes("restricted")?"This video is restricted. Please try a different video.":r.message.includes("not found")?"Video not found. Please check the URL and try again.":r.message),await (0,g.ng)(e,{status:"failed",transcriptStatus:"error",progress:t})}}async function y(e){try{let{youtubeUrl:t,testMode:r=!1,userId:o}=await e.json();if(!t)return s.Z.json({error:"YouTube URL is required"},{status:400});if(!o)return s.Z.json({error:"User ID is required"},{status:400});r&&(console.log("Running in test mode"),console.log("Input URL:",t),console.log("User ID:",o));let n=(0,f.Tm)(t);if(!n)return s.Z.json({error:"Invalid YouTube URL"},{status:400});r&&console.log("Extracted video ID:",n);let i=await (0,g.bG)();if(!i.videoJobsCollection||!i.transcriptChunksCollection)throw Error("Database collections not initialized");r&&console.log("Checking for existing job...");let a=await i.videoJobsCollection.findOne({youtubeUrl:t,userId:o,status:"completed",transcriptStatus:"found"});if(r&&console.log("Existing job found:",a?"Yes":"No"),a){let e=await i.transcriptChunksCollection.find({jobId:a.jobId,userId:o}).toArray();if(e&&e.length>0){let r=h();await (0,g.Yy)({jobId:r,youtubeUrl:t,userId:o,status:"completed",transcriptStatus:"found",progress:"Using previously processed transcript",processingMetadata:{videoId:n,transcriptSource:"reused",originalJobId:a.jobId}});let c=e.map((e,t)=>({...e,_id:void 0,jobId:r,chunkId:`${r}-${t}`,createdAt:new Date,metadata:{originalJobId:e.jobId,processingVersion:(e.metadata?.processingVersion||0)+1}}));try{return await (0,g.O5)(c),s.Z.json({status:"success",message:"Video processing completed (reused existing transcript)",jobId:r})}catch(e){throw console.error("Error creating transcript chunks:",e),await i.videoJobsCollection.deleteOne({jobId:r}),Error("Failed to create transcript chunks")}}}let c=h();return await (0,g.Yy)({jobId:c,youtubeUrl:t,userId:o,status:"pending",transcriptStatus:"processing",progress:"Starting processing...",processingMetadata:{videoId:n,processingStartTime:new Date,transcriptSource:"youtube"}}),b(c,t,o).catch(e=>{console.error("Background processing error:",e)}),s.Z.json({status:"success",message:"Video processing started",jobId:c})}catch(e){return console.error("Error in POST endpoint:",e),s.Z.json({error:"Failed to process video",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}new w.$D(process.env.GOOGLE_AI_KEY||"");let E=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/video/process/route",pathname:"/api/video/process",filename:"route",bundlePath:"app/api/video/process/route"},resolvedPagePath:"C:\\Users\\Deborah\\Documents\\Cursor Projects\\chatpye\\src\\app\\api\\video\\process\\route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:I,staticGenerationAsyncStorage:k,serverHooks:x,headerHooks:C,staticGenerationBailout:T}=E,$="/api/video/process/route";function O(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:k})}},48960:(e,t,r)=>{r.d(t,{C:()=>n,f:()=>i});let o=new(r(70973)).$D(process.env.GOOGLE_AI_KEY||"");async function n(e){try{let t=o.getGenerativeModel({model:"embedding-001"});return(await t.embedContent(e)).embedding.values}catch(e){throw console.error("Error generating embedding:",e),e}}async function i(e,t,r=3){try{let o=await n(e);return t.map(e=>({chunk:e,score:function(e,t){let r=e.reduce((e,r,o)=>e+r*t[o],0),o=Math.sqrt(e.reduce((e,t)=>e+t*t,0));return r/(o*Math.sqrt(t.reduce((e,t)=>e+t*t,0)))}(o,e.embedding)})).sort((e,t)=>t.score-e.score).slice(0,r).map(e=>e.chunk)}catch(e){throw console.error("Error finding relevant chunks:",e),e}}},48350:(e,t,r)=>{r.d(t,{pZ:()=>n,uB:()=>a,xu:()=>i});let o={MONGODB_DB_NAME:"chatpye_db",NODE_ENV:"development"};function n(e){let t=process.env[e];if(!t)throw Error(`Environment variable ${e} is not set`);return t}function i(e){return process.env[e]||o[e]}function a(){return"true"===process.env.VITEST||void 0!==process.env.JEST_WORKER_ID}},28216:(e,t,r)=>{r.d(t,{Cm:()=>b,O5:()=>f,Sx:()=>E,Yy:()=>p,a5:()=>y,bG:()=>u,fV:()=>v,ng:()=>g,oX:()=>m,sp:()=>h,up:()=>w});var o=r(38013),n=r(48350);let i=null,a=null,s=null,c=null,l=null;async function d(){if(a&&i)return{db:a,client:i};try{let e=(0,n.uB)()?process.env.MONGODB_URI:(0,n.pZ)("MONGODB_URI");if(!e)throw Error("MONGODB_URI is not set");i=new o.MongoClient(e),await i.connect();let t=(0,n.xu)("MONGODB_DB_NAME");return s=(a=i.db(t)).collection("videoJobs"),c=a.collection("transcriptChunks"),l=a.collection("cachedQAResponses"),await s.createIndex({jobId:1},{unique:!0}),await s.createIndex({"processingMetadata.videoId":1}),await c.createIndex({jobId:1}),await c.createIndex({"metadata.videoId":1}),{db:a,client:i}}catch(e){throw console.error("Failed to connect to MongoDB:",e),e}}async function u(){return a&&i||await d(),{videoJobsCollection:s||void 0,transcriptChunksCollection:c||void 0,cachedVideoQACollection:l||void 0}}async function p(e){let{videoJobsCollection:t}=await u();if(!t)throw Error("videoJobsCollection not initialized");let r={...e,status:e.status||"pending",createdAt:new Date,updatedAt:new Date},o=await t.insertOne(r);if(!o.insertedId)throw Error("Failed to create video job.");return{...r,_id:o.insertedId}}async function h(e){let{videoJobsCollection:t}=await u();if(!t)throw Error("videoJobsCollection not initialized");return t.findOne({jobId:e})}async function g(e,t){let{videoJobsCollection:r}=await u();if(!r)throw Error("videoJobsCollection not initialized");return(await r.updateOne({jobId:e},{$set:{...t,updatedAt:new Date}})).modifiedCount>0}async function f(e){let{transcriptChunksCollection:t}=await u();if(!t)throw Error("transcriptChunksCollection not initialized");if(0===e.length)return;let r=e.map(e=>({...e,createdAt:new Date}));try{r.length>0&&await t.deleteMany({jobId:r[0].jobId,userId:r[0].userId});let e=await t.insertMany(r);console.log(`Successfully inserted ${e.insertedCount} transcript chunks`)}catch(e){throw console.error("Error in createTranscriptChunks:",e),Error(`Failed to create transcript chunks: ${e instanceof Error?e.message:"Unknown error"}`)}}async function w(e){let{transcriptChunksCollection:t}=await u();if(!t)throw Error("transcriptChunksCollection not initialized");return t.find({jobId:e}).sort({startTimestamp:1}).toArray()}async function v(e,t,r){let{transcriptChunksCollection:o}=await u();if(!o)throw Error("transcriptChunksCollection not initialized");return(await o.updateOne({jobId:e,chunkId:t},{$set:{embedding:r}})).modifiedCount>0}async function m(e,t){let{transcriptChunksCollection:r}=await u();if(!r)throw Error("transcriptChunksCollection not initialized");return r.find({"metadata.videoId":e,userId:t}).toArray()}async function b(e,t){let{videoJobsCollection:r}=await u();if(!r)throw Error("videoJobsCollection not initialized");return!!await r.findOne({jobId:e,"processingMetadata.videoId":t})}async function y(e,t,r){let{cachedVideoQACollection:o}=await u();if(!o)throw Error("cachedVideoQACollection not initialized");return await o.findOne({jobId:e,questionTextNormalized:t,modelUsed:r,cacheType:"user_question"})}async function E(e,t,r,o,n="user_question"){let i,a;let{cachedVideoQACollection:s}=await u();if(!s)throw Error("cachedVideoQACollection not initialized");let c=new Date;"user_question"===n?(i={jobId:e,questionTextNormalized:t,modelUsed:r,cacheType:n},a={$set:{responseText:o,updatedAt:c},$setOnInsert:{jobId:e,questionTextNormalized:t,modelUsed:r,cacheType:n,createdAt:c}}):(i={jobId:e,analysisType:t,modelUsed:r,cacheType:n},a={$set:{responseText:o,updatedAt:c},$setOnInsert:{jobId:e,analysisType:t,modelUsed:r,cacheType:n,createdAt:c}});try{await s.updateOne(i,a,{upsert:!0})}catch(e){console.error("Error saving Q&A response to cache:",e)}}},45894:(e,t,r)=>{r.d(t,{Tm:()=>h,kS:()=>g,V6:()=>f});let o=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,n="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",i=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class a extends Error{constructor(e){super(`[YoutubeTranscript] 🚨 ${e}`)}}class s extends a{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class c extends a{constructor(e){super(`The video is no longer available (${e})`)}}class l extends a{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class d extends a{constructor(e){super(`No transcripts are available for this video (${e})`)}}class u extends a{constructor(e,t,r){super(`No transcripts are available in ${e} this video (${r}). Available languages: ${t.join(", ")}`)}}class p{static fetchTranscript(e,t){var r,o,a,p,h;return o=this,a=void 0,p=void 0,h=function*(){let o=this.retrieveVideoId(e),a=yield fetch(`https://www.youtube.com/watch?v=${o}`,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":n})}),p=yield a.text(),h=p.split('"captions":');if(h.length<=1){if(p.includes('class="g-recaptcha"'))throw new s;if(!p.includes('"playabilityStatus":'))throw new c(e);throw new l(e)}let g=null===(r=(()=>{try{return JSON.parse(h[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===r?void 0:r.playerCaptionsTracklistRenderer;if(!g)throw new l(e);if(!("captionTracks"in g))throw new d(e);if((null==t?void 0:t.lang)&&!g.captionTracks.some(e=>e.languageCode===(null==t?void 0:t.lang)))throw new u(null==t?void 0:t.lang,g.captionTracks.map(e=>e.languageCode),e);let f=((null==t?void 0:t.lang)?g.captionTracks.find(e=>e.languageCode===(null==t?void 0:t.lang)):g.captionTracks[0]).baseUrl,w=yield fetch(f,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":n})});if(!w.ok)throw new d(e);return[...(yield w.text()).matchAll(i)].map(e=>{var r;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(r=null==t?void 0:t.lang)&&void 0!==r?r:g.captionTracks[0].languageCode}})},new(p||(p=Promise))(function(e,t){function r(e){try{i(h.next(e))}catch(e){t(e)}}function n(e){try{i(h.throw(e))}catch(e){t(e)}}function i(t){var o;t.done?e(t.value):((o=t.value)instanceof p?o:new p(function(e){e(o)})).then(r,n)}i((h=h.apply(o,a||[])).next())})}static retrieveVideoId(e){if(11===e.length)return e;let t=e.match(o);if(t&&t.length)return t[1];throw new a("Impossible to retrieve Youtube video ID.")}}function h(e){for(let t of[/(?:youtube\.com\/watch\?v=)([^&\n?#]+)/,/(?:youtu\.be\/)([^&\n?#]+)/,/youtube\.com\/embed\/([^&\n?#]+)/,/youtube\.com\/v\/([^&\n?#]+)/]){let r=e.match(t);if(r&&r[1])return r[1]}return null}async function g(e){try{let t=await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${e}&key=${process.env.YOUTUBE_API_KEY}`);if(!t.ok)throw Error("Failed to fetch video details");let r=await t.json();if(!r.items?.[0])throw Error("Video not found");let o=r.items[0];return{title:o.snippet?.title,description:o.snippet?.description,channelTitle:o.snippet?.channelTitle,publishedAt:o.snippet?.publishedAt}}catch(e){throw console.error("Error fetching video details:",e),e}}async function f(e){try{let t=h(e);if(!t)throw Error("Invalid YouTube URL");try{let e=await p.fetchTranscript(t,{lang:"en"});if(!e||0===e.length)return console.error("No transcript found for video:",t),null;return e.map(e=>({text:e.text,start:e.offset,duration:e.duration}))}catch(i){console.error("Error fetching transcript with youtube-transcript:",i);let e=await fetch(`https://www.googleapis.com/youtube/v3/captions?part=snippet&videoId=${t}&key=${process.env.YOUTUBE_API_KEY}`);if(!e.ok){let t=await e.json();if(t.error?.code===403)throw Error("This video has captions disabled or restricted. Please try a different video with captions enabled.");throw Error("Failed to check video captions availability.")}let r=await e.json();if(!r.items||0===r.items.length)throw Error("No captions found for this video. Please try a different video with captions enabled.");let o=r.items[0].id,n=await fetch(`https://www.googleapis.com/youtube/v3/captions/${o}?key=${process.env.YOUTUBE_API_KEY}`,{headers:{Authorization:`Bearer ${process.env.YOUTUBE_API_KEY}`,Accept:"application/json"}});if(!n.ok)throw Error("Failed to fetch video captions. Please try a different video.");return(await n.json()).items.map(e=>({text:e.text,start:e.start,duration:e.duration}))}}catch(e){if(console.error("Error fetching YouTube transcript:",e),e instanceof Error){if(e.message.includes("Could not get the transcript"))throw Error("This video does not have captions available. Please try a different video with captions enabled.");if(e.message.includes("Transcript is disabled"))throw Error("This video has captions disabled. Please try a different video with captions enabled.");if(e.message.includes("Video is private"))throw Error("This video is private. Please try a public video.");if(e.message.includes("Video is restricted"))throw Error("This video is restricted. Please try a different video.")}throw Error("Failed to fetch transcript. Please try a different video.")}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,206,973],()=>r(10647));module.exports=o})();