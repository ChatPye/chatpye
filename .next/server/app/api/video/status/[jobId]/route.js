"use strict";(()=>{var t={};t.id=934,t.ids=[934],t.modules={38013:t=>{t.exports=require("mongodb")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},98317:(t,e,o)=>{o.r(e),o.d(e,{headerHooks:()=>h,originalPathname:()=>v,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>f,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>w});var r={};o.r(r),o.d(r,{GET:()=>d});var n=o(95419),i=o(69108),a=o(99678),s=o(78070),c=o(28216);async function d(t,{params:e}){try{let t=e.jobId;if(!t)return s.Z.json({error:"Job ID is required"},{status:400});console.log("Fetching job status for:",t);let o=await (0,c.sp)(t);if(!o)return console.log("Job not found:",t),s.Z.json({error:"Job not found"},{status:404});return console.log("Job status:",o.status,"Progress:",o.progress),s.Z.json(o)}catch(t){return console.error("Error in status endpoint:",t),s.Z.json({error:"Failed to fetch job status",details:t instanceof Error?t.message:"Unknown error"},{status:500})}}let u=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/video/status/[jobId]/route",pathname:"/api/video/status/[jobId]",filename:"route",bundlePath:"app/api/video/status/[jobId]/route"},resolvedPagePath:"C:\\Users\\Deborah\\Documents\\Cursor Projects\\chatpye\\src\\app\\api\\video\\status\\[jobId]\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:p,serverHooks:f,headerHooks:h,staticGenerationBailout:w}=u,v="/api/video/status/[jobId]/route";function y(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:p})}},48350:(t,e,o)=>{o.d(e,{pZ:()=>n,uB:()=>a,xu:()=>i});let r={MONGODB_DB_NAME:"chatpye_db",NODE_ENV:"development"};function n(t){let e=process.env[t];if(!e)throw Error(`Environment variable ${t} is not set`);return e}function i(t){return process.env[t]||r[t]}function a(){return"true"===process.env.VITEST||void 0!==process.env.JEST_WORKER_ID}},28216:(t,e,o)=>{o.d(e,{Cm:()=>I,O5:()=>w,Sx:()=>E,Yy:()=>p,a5:()=>C,bG:()=>l,fV:()=>y,ng:()=>h,oX:()=>b,sp:()=>f,up:()=>v});var r=o(38013),n=o(48350);let i=null,a=null,s=null,c=null,d=null;async function u(){if(a&&i)return{db:a,client:i};try{let t=(0,n.uB)()?process.env.MONGODB_URI:(0,n.pZ)("MONGODB_URI");if(!t)throw Error("MONGODB_URI is not set");i=new r.MongoClient(t),await i.connect();let e=(0,n.xu)("MONGODB_DB_NAME");return s=(a=i.db(e)).collection("videoJobs"),c=a.collection("transcriptChunks"),d=a.collection("cachedQAResponses"),await s.createIndex({jobId:1},{unique:!0}),await s.createIndex({"processingMetadata.videoId":1}),await c.createIndex({jobId:1}),await c.createIndex({"metadata.videoId":1}),{db:a,client:i}}catch(t){throw console.error("Failed to connect to MongoDB:",t),t}}async function l(){return a&&i||await u(),{videoJobsCollection:s||void 0,transcriptChunksCollection:c||void 0,cachedVideoQACollection:d||void 0}}async function p(t){let{videoJobsCollection:e}=await l();if(!e)throw Error("videoJobsCollection not initialized");let o={...t,status:t.status||"pending",createdAt:new Date,updatedAt:new Date},r=await e.insertOne(o);if(!r.insertedId)throw Error("Failed to create video job.");return{...o,_id:r.insertedId}}async function f(t){let{videoJobsCollection:e}=await l();if(!e)throw Error("videoJobsCollection not initialized");return e.findOne({jobId:t})}async function h(t,e){let{videoJobsCollection:o}=await l();if(!o)throw Error("videoJobsCollection not initialized");return(await o.updateOne({jobId:t},{$set:{...e,updatedAt:new Date}})).modifiedCount>0}async function w(t){let{transcriptChunksCollection:e}=await l();if(!e)throw Error("transcriptChunksCollection not initialized");if(0===t.length)return;let o=t.map(t=>({...t,createdAt:new Date}));try{o.length>0&&await e.deleteMany({jobId:o[0].jobId,userId:o[0].userId});let t=await e.insertMany(o);console.log(`Successfully inserted ${t.insertedCount} transcript chunks`)}catch(t){throw console.error("Error in createTranscriptChunks:",t),Error(`Failed to create transcript chunks: ${t instanceof Error?t.message:"Unknown error"}`)}}async function v(t){let{transcriptChunksCollection:e}=await l();if(!e)throw Error("transcriptChunksCollection not initialized");return e.find({jobId:t}).sort({startTimestamp:1}).toArray()}async function y(t,e,o){let{transcriptChunksCollection:r}=await l();if(!r)throw Error("transcriptChunksCollection not initialized");return(await r.updateOne({jobId:t,chunkId:e},{$set:{embedding:o}})).modifiedCount>0}async function b(t,e){let{transcriptChunksCollection:o}=await l();if(!o)throw Error("transcriptChunksCollection not initialized");return o.find({"metadata.videoId":t,userId:e}).toArray()}async function I(t,e){let{videoJobsCollection:o}=await l();if(!o)throw Error("videoJobsCollection not initialized");return!!await o.findOne({jobId:t,"processingMetadata.videoId":e})}async function C(t,e,o){let{cachedVideoQACollection:r}=await l();if(!r)throw Error("cachedVideoQACollection not initialized");return await r.findOne({jobId:t,questionTextNormalized:e,modelUsed:o,cacheType:"user_question"})}async function E(t,e,o,r,n="user_question"){let i,a;let{cachedVideoQACollection:s}=await l();if(!s)throw Error("cachedVideoQACollection not initialized");let c=new Date;"user_question"===n?(i={jobId:t,questionTextNormalized:e,modelUsed:o,cacheType:n},a={$set:{responseText:r,updatedAt:c},$setOnInsert:{jobId:t,questionTextNormalized:e,modelUsed:o,cacheType:n,createdAt:c}}):(i={jobId:t,analysisType:e,modelUsed:o,cacheType:n},a={$set:{responseText:r,updatedAt:c},$setOnInsert:{jobId:t,analysisType:e,modelUsed:o,cacheType:n,createdAt:c}});try{await s.updateOne(i,a,{upsert:!0})}catch(t){console.error("Error saving Q&A response to cache:",t)}}}};var e=require("../../../../../webpack-runtime.js");e.C(t);var o=t=>e(e.s=t),r=e.X(0,[638,206],()=>o(98317));module.exports=r})();