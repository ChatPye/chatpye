"use strict";(()=>{var e={};e.id=621,e.ids=[621],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},53623:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>g,originalPathname:()=>b,patchFetch:()=>y,requestAsyncStorage:()=>h,routeModule:()=>p,serverHooks:()=>v,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>w});var o={};r.r(o),r.d(o,{GET:()=>d,POST:()=>u,runtime:()=>l});var i=r(95419),a=r(69108),n=r(99678),s=r(78070),c=r(45894);let l="nodejs";async function d(e){let{searchParams:t}=new URL(e.url),r=t.get("videoId");if(!r)return s.Z.json({error:"Video ID is required"},{status:400});try{let e=await (0,c.kS)(r);return s.Z.json(e)}catch(e){return console.error("Error fetching video details:",e),s.Z.json({error:"Failed to fetch video details"},{status:500})}}async function u(e){try{let{youtubeUrl:t}=await e.json();if(!t)return s.Z.json({error:"YouTube URL is required"},{status:400});let r=(0,c.Tm)(t);if(!r)return s.Z.json({error:"Invalid YouTube URL"},{status:400});let o=await (0,c.kS)(r);return s.Z.json({id:r,...o,url:t})}catch(e){return console.error("Error processing video info:",e),s.Z.json({error:"Failed to process video info"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/video-info/route",pathname:"/api/video-info",filename:"route",bundlePath:"app/api/video-info/route"},resolvedPagePath:"C:\\Users\\Deborah\\Documents\\Cursor Projects\\chatpye\\src\\app\\api\\video-info\\route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:h,staticGenerationAsyncStorage:f,serverHooks:v,headerHooks:g,staticGenerationBailout:w}=p,b="/api/video-info/route";function y(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:f})}},45894:(e,t,r)=>{r.d(t,{Tm:()=>h,kS:()=>f,V6:()=>v});let o=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,i="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",a=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class n extends Error{constructor(e){super(`[YoutubeTranscript] ðŸš¨ ${e}`)}}class s extends n{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class c extends n{constructor(e){super(`The video is no longer available (${e})`)}}class l extends n{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class d extends n{constructor(e){super(`No transcripts are available for this video (${e})`)}}class u extends n{constructor(e,t,r){super(`No transcripts are available in ${e} this video (${r}). Available languages: ${t.join(", ")}`)}}class p{static fetchTranscript(e,t){var r,o,n,p,h;return o=this,n=void 0,p=void 0,h=function*(){let o=this.retrieveVideoId(e),n=yield fetch(`https://www.youtube.com/watch?v=${o}`,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":i})}),p=yield n.text(),h=p.split('"captions":');if(h.length<=1){if(p.includes('class="g-recaptcha"'))throw new s;if(!p.includes('"playabilityStatus":'))throw new c(e);throw new l(e)}let f=null===(r=(()=>{try{return JSON.parse(h[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===r?void 0:r.playerCaptionsTracklistRenderer;if(!f)throw new l(e);if(!("captionTracks"in f))throw new d(e);if((null==t?void 0:t.lang)&&!f.captionTracks.some(e=>e.languageCode===(null==t?void 0:t.lang)))throw new u(null==t?void 0:t.lang,f.captionTracks.map(e=>e.languageCode),e);let v=((null==t?void 0:t.lang)?f.captionTracks.find(e=>e.languageCode===(null==t?void 0:t.lang)):f.captionTracks[0]).baseUrl,g=yield fetch(v,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":i})});if(!g.ok)throw new d(e);return[...(yield g.text()).matchAll(a)].map(e=>{var r;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(r=null==t?void 0:t.lang)&&void 0!==r?r:f.captionTracks[0].languageCode}})},new(p||(p=Promise))(function(e,t){function r(e){try{a(h.next(e))}catch(e){t(e)}}function i(e){try{a(h.throw(e))}catch(e){t(e)}}function a(t){var o;t.done?e(t.value):((o=t.value)instanceof p?o:new p(function(e){e(o)})).then(r,i)}a((h=h.apply(o,n||[])).next())})}static retrieveVideoId(e){if(11===e.length)return e;let t=e.match(o);if(t&&t.length)return t[1];throw new n("Impossible to retrieve Youtube video ID.")}}function h(e){for(let t of[/(?:youtube\.com\/watch\?v=)([^&\n?#]+)/,/(?:youtu\.be\/)([^&\n?#]+)/,/youtube\.com\/embed\/([^&\n?#]+)/,/youtube\.com\/v\/([^&\n?#]+)/]){let r=e.match(t);if(r&&r[1])return r[1]}return null}async function f(e){try{let t=await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${e}&key=${process.env.YOUTUBE_API_KEY}`);if(!t.ok)throw Error("Failed to fetch video details");let r=await t.json();if(!r.items?.[0])throw Error("Video not found");let o=r.items[0];return{title:o.snippet?.title,description:o.snippet?.description,channelTitle:o.snippet?.channelTitle,publishedAt:o.snippet?.publishedAt}}catch(e){throw console.error("Error fetching video details:",e),e}}async function v(e){try{let t=h(e);if(!t)throw Error("Invalid YouTube URL");try{let e=await p.fetchTranscript(t,{lang:"en"});if(!e||0===e.length)return console.error("No transcript found for video:",t),null;return e.map(e=>({text:e.text,start:e.offset,duration:e.duration}))}catch(a){console.error("Error fetching transcript with youtube-transcript:",a);let e=await fetch(`https://www.googleapis.com/youtube/v3/captions?part=snippet&videoId=${t}&key=${process.env.YOUTUBE_API_KEY}`);if(!e.ok){let t=await e.json();if(t.error?.code===403)throw Error("This video has captions disabled or restricted. Please try a different video with captions enabled.");throw Error("Failed to check video captions availability.")}let r=await e.json();if(!r.items||0===r.items.length)throw Error("No captions found for this video. Please try a different video with captions enabled.");let o=r.items[0].id,i=await fetch(`https://www.googleapis.com/youtube/v3/captions/${o}?key=${process.env.YOUTUBE_API_KEY}`,{headers:{Authorization:`Bearer ${process.env.YOUTUBE_API_KEY}`,Accept:"application/json"}});if(!i.ok)throw Error("Failed to fetch video captions. Please try a different video.");return(await i.json()).items.map(e=>({text:e.text,start:e.start,duration:e.duration}))}}catch(e){if(console.error("Error fetching YouTube transcript:",e),e instanceof Error){if(e.message.includes("Could not get the transcript"))throw Error("This video does not have captions available. Please try a different video with captions enabled.");if(e.message.includes("Transcript is disabled"))throw Error("This video has captions disabled. Please try a different video with captions enabled.");if(e.message.includes("Video is private"))throw Error("This video is private. Please try a public video.");if(e.message.includes("Video is restricted"))throw Error("This video is restricted. Please try a different video.")}throw Error("Failed to fetch transcript. Please try a different video.")}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,206],()=>r(53623));module.exports=o})();